
// ID: 141      DATA: 80 00 00 00 00 00 00 00 // 电机关闭

// ID: 141      DATA: 81 00 00 00 00 00 00 00 // 电机停止

// ID: 141      DATA: 88 00 00 00 00 00 00 00 // 电机运行

// ID: 141      DATA: A0 00 00 00 C8 00 00 00 // 开环(仅用于MS系列电机)

// ID: 141      DATA: A1 00 00 00 64 00 00 00 // 转矩闭环(仅用用于MF、MG系列电机)

// ID: 141      DATA: A2 00 00 00 A0 8C 00 00 // 速度闭环

// ID: 141      DATA: A3 00 00 00 A0 8C 00 00 // 位置闭环1

// ID: 141      DATA: A4 00 D0 02 A0 8C 00 00 // 位置闭环2

// ID: 141      DATA: A4 00 78 00 50 46 00 00 // 位置闭环2  速度120dps，角度+180

// ID: 154      DATA: A4 00 78 00 B0 B9 FF FF // 位置闭环2  ID#20 速度120dps，角度-180°

// ID: 141      DATA: A5 00 00 00 50 46 00 00 // 位置闭环3

// ID: 141      DATA: A6 00 D0 02 50 46 00 00 // 位置闭环4

// ID: 141      DATA: A6 00 D0 02 50 46 00 00 // 位置闭环4   

// ID: 141      DATA: A7 00 D0 02 94 11 00 00 // 位置闭环5`

// ID: 141      DATA: A8 00 D0 02 B8 0B 00 00 // 位置闭环6  速度720dps，角度+30

// ID: 141      DATA: A8 00 D0 02 48 F4 FF FF // 位置闭环6  速度720dps，角度-30

// ID: 141      DATA: 30 00 00 00 00 00 00 00 // 读取PID

// ID: 141      DATA: 31 00 64 64 32 28 32 32 // 写入PID到RAM

// ID: 141      DATA: 32 00 64 64 32 28 32 32 // 写入PID到ROM

// ID: 141      DATA: 33 00 00 00 00 00 00 00 // 读取加速度

// ID: 141      DATA: 34 00 00 00 B8 0B 00 00 // 写入加速度到RAM

// ID: 141      DATA: 37 00 00 00 00 00 00 00 // 读取最大扭矩

// ID: 141      DATA: 38 00 00 00 64 00 00 00 // 写入最大扭矩到RAM

// ID: 141      DATA: 90 00 00 00 00 00 00 00 // 读取编码器值

// ID: 141      DATA: 91 00 00 00 00 00 00 00 // 写入电机零点到ROM

// ID: 141      DATA: 19 00 00 00 00 00 00 00 // 设置当前位置作为零点到ROM

// ID: 141      DATA: 92 00 00 00 00 00 00 00 // 读取多圈角度值

// ID: 141      DATA: 94 00 00 00 00 00 00 00 // 读取单圈角度值

// ID: 141      DATA: 9A 00 00 00 00 00 00 00 // 读取错误标志和状态1

// ID: 141      DATA: 9B 00 00 00 00 00 00 00 // 清除错误标志

// ID: 141      DATA: 9C 00 00 00 00 00 00 00 // 读取状态2

// ID: 141      DATA: 9D 00 00 00 00 00 00 00 // 读取状态3


sudo ip link set can0 up type can bitrate 1000000 && sudo ifconfig can0 txqueuelen 65536

sudo ip link set can0 down

A4 00 2C 01 50 46 00 00 //旋转180 速度300dps
A4 00 2C 01 28 23 00 00 //顺时针选择90°

A2 00 00 00 28 23 00 00 //顺时针旋转360
19 00 00 00 00 00 00 00 //写入电机零点到ROM
A4 00 5A 00 B0 B9 FF FF //逆时针旋转180

A2 00 00 00 28 23 00 00
19 00 00 00 00 00 00 00
A4 00 5A 00 FF A6 FF FF


/////////////
T:A2 00 00 00 28 23 00 00 //顺时针转动
T:A2 00 00 00 00 00 00 00 //停止并电机停止
R:A2 28 00 00 00 00 32 05 3V

T:A2 00 00 00 28 23 00 00
R:A2 2A 52 03 02 00 FF 7F 18V

在CAN协议中，通常使用定点数或补码来表示角度值。根据你提供的两个值，我们可以分析它们的表示方式。

48 F4 FF FF 表示旋转 -30 度。
B8 0B 00 00 表示旋转 30 度。
我们可以看到，这两个值都是 4 字节（32 位）的数据。为了分析它们的表示方式，我们需要将它们转换为十进制数，并检查它们的符号。

分析步骤
48 F4 FF FF：

这是一个 32 位的值，从后往前是低字节到高字节。
将其转换为十六进制数：0xFFF4F48。
由于最高位是 1，这表示这是一个负数（使用补码表示法）。
计算补码的原码：取反加一。
取反：0x000B0B07
加一：0x000B0B08
转换为十进制：-30
B8 0B 00 00：

这是一个 32 位的值，从后往前是低字节到高字节。
将其转换为十六进制数：0x00000BB8。
由于最高位是 0，这表示这是一个正数。
转换为十进制：30